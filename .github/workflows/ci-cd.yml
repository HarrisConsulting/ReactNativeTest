name: React Native CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

env:
  NODE_VERSION: "18.x"

jobs:
  # =====================================
  # Code Quality and Testing Jobs
  # =====================================
  lint-and-typecheck:
    name: Lint and TypeScript Check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: Install dependencies
        run: npm ci --ignore-scripts

      - name: Run ESLint
        run: npm run lint

      - name: Run TypeScript check
        run: npm run typecheck

  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: Install dependencies
        run: npm ci --ignore-scripts

      - name: Run unit tests
        run: npm test -- --watchAll=false

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: Install dependencies
        run: npm ci --ignore-scripts

      - name: Run security audit
        run: npm run security:audit
        continue-on-error: true

  build-check:
    name: Build Check
    runs-on: ubuntu-latest
    needs: [lint-and-typecheck, unit-tests]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: Install dependencies
        run: npm ci --ignore-scripts

      - name: Verify project structure
        run: |
          echo "📁 Project Structure Analysis"
          echo "- Source files: $(find src -name '*.tsx' -o -name '*.ts' | wc -l) files"
          echo "- Test files: $(find __tests__ -name '*.test.tsx' -o -name '*.test.ts' | wc -l) files"
          echo "- Configuration files: $(ls *.json *.js *.config.js | wc -l) files"

  ci-summary:
    name: CI Summary
    runs-on: ubuntu-latest
    needs: [lint-and-typecheck, unit-tests, security-scan, build-check]
    if: always()

    steps:
      - name: Generate CI Summary
        run: |
          echo "# 🚀 React Native CI/CD Pipeline Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## 📊 Job Results" >> $GITHUB_STEP_SUMMARY
          echo "| Job | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|-----|--------|" >> $GITHUB_STEP_SUMMARY
          echo "| Lint & TypeCheck | ${{ needs.lint-and-typecheck.result == 'success' && '✅ Passed' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Unit Tests | ${{ needs.unit-tests.result == 'success' && '✅ Passed' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Security Scan | ${{ needs.security-scan.result == 'success' && '✅ Passed' || '⚠️ Issues Found' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Build Check | ${{ needs.build-check.result == 'success' && '✅ Passed' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📊 Overall Status" >> $GITHUB_STEP_SUMMARY
          if [[ "${{ needs.lint-and-typecheck.result }}" == "success" && "${{ needs.unit-tests.result }}" == "success" && "${{ needs.build-check.result }}" == "success" ]]; then
            echo "🎉 **All core checks passed!** Ready for deployment." >> $GITHUB_STEP_SUMMARY
          else
            echo "⚠️ **Some checks failed.** Please review and fix issues before deployment." >> $GITHUB_STEP_SUMMARY
          fi
